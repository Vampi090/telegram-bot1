project/
├── bot.py                       # Головний файл запуску бота
├── Bot_old.py                   # Стара версія бота
├── config.py                    # Конфігурації додатку (наприклад, токен API, налаштування)
├── db.py                        # Робота з базою даних
├── database.db                  # База даних SQLite
├── finance.db                   # База даних фінансів
├── finance_bot.db               # База даних бота фінансів
├── identifier.sqlite            # Файл ідентифікатора SQLite
├── bot.log                      # Файл логів бота
├── REFACTORING.md               # Документація з рефакторингу
├── requirements.txt             # Залежності проекту
├── handlers/                    # Обробники користувацьких команд
│   ├── __init__.py              # Вказує, що це пакет Python
│   ├── start.py                 # `/start` і пов'язані команди
│   ├── transactions.py          # Робота з транзакціями
│   ├── analytics.py             # Аналітика та статистика
│   ├── budget.py                # Функції, пов'язані з бюджетом та цілями
│   ├── debt.py                  # Управління боргами
│   ├── reminders.py             # Обробка нагадувань
│   ├── sync.py                  # Синхронізація та експорт даних
│   ├── help.py                  # Обробка команди `/help`
│   ├── main_menu.py             # Головне меню
│   ├── tools.py                 # Інструменти
│   ├── handlers.py              # Загальні обробники
│   ├── financial_instruments.py # Фінансові інструменти
├── keyboards/                   # Клавіатури (меню бота)
│   ├── __init__.py              # Вказує, що це пакет Python
│   ├── main_menu.py             # Головне меню
│   ├── transaction_menu.py      # Меню для роботи з транзакціями
│   ├── analytics_menu.py        # Меню для аналітики
│   ├── budget_menu.py           # Меню для цілей та бюджету
│   ├── tools_menu.py            # Інші інструменти
│   ├── sync_menu.py             # Меню експорту/синхронізації
│   ├── help_menu.py             # Меню допомоги/інформації
│   ├── debt_menu.py             # Меню боргів
│   ├── reminder_menu.py         # Меню нагадувань
├── models/                      # Робота з базою даних та моделями
│   ├── __init__.py              # Вказує, що це пакет Python
│   ├── transaction.py           # Модель і функції для роботи з транзакціями
│   ├── debt.py                  # Модель і функції роботи з боргами
├── services/                    # Сервіси для додаткової функціональності
│   ├── __init__.py              # Вказує, що це пакет Python
│   ├── analytics_service.py     # Сервіс аналітики
│   ├── database_service.py      # Сервіс бази даних
│   ├── logger.py                # Налаштування логування
│   ├── logging_service.py       # Сервіс логування
│   ├── sync_service.py          # Сервіс синхронізації
│   ├── transaction_service.py   # Сервіс транзакцій
├── templates/                   # Шаблони для повідомлень
│   ├── __init__.py              # Вказує, що це пакет Python
├── utils/                       # Допоміжні утиліти
│   ├── __init__.py              # Вказує, що це пакет Python
│   ├── menu_utils.py            # Утиліти для меню
├── tests/                       # Тести
│   ├── __init__.py              # Вказує, що це пакет Python


### 1. **Опис структури**
- **`bot.py`**
Головний вхідний файл запуску Telegram-бота. Тут відбувається налаштування (реєстрація обробників, ініціалізація бота) і запуск.
- **`Bot_old.py`**
Стара версія бота, яка зберігається для довідки або резервного копіювання.
- **`config.py`**
Конфігураційний файл для зберігання статичних змінних, таких як `TOKEN` та інші налаштування.
- **`db.py`**
Файл для роботи з базою даних, містить функції для підключення та взаємодії з базою даних.
- **`handlers/`**
Каталог для обробників команд Telegram. Розділений за функціональним принципом (наприклад, `start`, `analytics`, `debt` тощо).
- **`keyboards/`**
Окремий каталог для генерації різних клавіатур (інлайн або звичайних), що використовуються в боті.
- **`models/`**
Каталог для роботи з базою даних (моделі даних). Кожна сутність (транзакції, борги) розміщується в окремих файлах.
- **`services/`**
Каталог допоміжних сервісів, які працюють з зовнішніми API або надають додаткові можливості (логування, аналітика, синхронізація).
- **`templates/`**
Каталог текстових шаблонів для повідомлень, які бот надсилає користувачу.
- **`utils/`**
Допоміжні функції, такі як утиліти для роботи з меню та інші загальні інструменти.
- **`tests/`**
Каталог для тестів, згрупованих за модулями.
